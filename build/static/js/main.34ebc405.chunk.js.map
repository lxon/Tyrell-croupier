{"version":3,"sources":["brain/card.js","brain/misc.js","images/peep.png","App.js","index.js"],"names":["generateDeck","ranks","split","suits","cards","i","length","rnd","Math","random","tmp","shuffle","Array","generateCards","map","rank","suit","suitCode","avatar","emojis","floor","App","useState","numberOfPlayers","setNumberOfPlayers","distributed","setDistributed","playerCards","deck","error","msg","arr","chunkSize","res","chunk","slice","push","sliceIntoChunks","brain","display","headertop","className","icon","faUsers","min","max","defaultValue","onChange","value","onPressEnter","style","src","peep","alt","items","index","parse","subItems","sIndex","href","toUpperCase","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.34ebc405.chunk.js","sourcesContent":["export function generateCards() {\n  const cards = new Array(52);\n  for (let i = 0; i < cards.length; i++) {\n    cards[i] = i;\n  }\n  return cards;\n}\n\nexport function shuffle(cards) {\n  for (let i = 0; i < cards.length; i++) {\n    const rnd = (Math.random() * i) | 0;\n    const tmp = cards[i];\n    cards[i] = cards[rnd];\n    cards[rnd] = tmp;\n  }\n  return cards;\n}\n\nexport function generateDeck() {\n  const ranks = \"a 2 3 4 5 6 7 8 9 10 j q k\".split(\" \");\n  const suits = \"spades hearts clubs diams\".split(\" \");\n  //   const suits = \"♠︎ ♥︎ ♣︎ ♦︎\".split(\" \");\n  //   const suits = \"S H C D\".split(\" \");\n\n  let cards = generateCards();\n\n  const getProperties = (i) => {\n    const rank = i % 13;\n    // const value = rank + 1;\n    const suit = (i / 13) | 0;\n\n    // return { ranks: ranks[rank], suit: suits[suit] };\n    // return { card: `${suits[suit]}-${ranks[rank]}`, ranks:  };\n    return {\n      rank,\n      ranks: ranks[rank],\n      suit: suits[suit],\n      suitCode: `&${suits[suit]};`,\n    };\n  };\n\n  return shuffle(cards.map(getProperties));\n}\n\nexport function sliceIntoChunks(arr, chunkSize) {\n  const res = [];\n  for (let i = 0; i < arr.length; i += chunkSize) {\n    const chunk = arr.slice(i, i + chunkSize);\n    res.push(chunk);\n  }\n  return res;\n}\n\nexport function distribute(numberOfPlayers) {\n  const deck = generateDeck();\n  const remainer = deck.length % numberOfPlayers;\n\n  if (remainer !== 0) {\n    numberOfPlayers = numberOfPlayers ? numberOfPlayers : 0;\n    const msg = {\n      error: \"001\",\n      msg: `The 52 cards cannot distribute evenly among ${numberOfPlayers} players.`,\n    };\n    return msg;\n  }\n\n  const result = sliceIntoChunks(deck, deck.length / numberOfPlayers);\n  return result;\n}\n","export function avatar() {\n  var emojis = [\n    \"😄\",\n    \"😃\",\n    \"😀\",\n    \"😊\",\n    \"😉\",\n    \"😍\",\n    \"😘\",\n    \"😚\",\n    \"😗\",\n    \"😙\",\n    \"😜\",\n    \"😝\",\n    \"😛\",\n    \"😳\",\n    \"😁\",\n    \"😔\",\n    \"😌\",\n    \"😒\",\n    \"😞\",\n    \"😣\",\n    \"😢\",\n    \"😂\",\n    \"😭\",\n    \"😪\",\n    \"😥\",\n    \"😰\",\n    \"😅\",\n    \"😓\",\n    \"😩\",\n    \"😫\",\n    \"😨\",\n    \"😱\",\n    \"😠\",\n    \"😡\",\n    \"😤\",\n    \"😖\",\n    \"😆\",\n    \"😋\",\n    \"😷\",\n    \"😎\",\n    \"😴\",\n    \"😵\",\n    \"😲\",\n    \"😟\",\n    \"😦\",\n    \"😧\",\n    \"😈\",\n    \"👿\",\n    \"😮\",\n    \"😬\",\n    \"😐\",\n    \"😕\",\n    \"😯\",\n    \"😶\",\n    \"😇\",\n    \"😏\",\n    \"😑\",\n    \"👲\",\n    \"👳\",\n    \"👮\",\n    \"👷\",\n    \"💂\",\n    \"👶\",\n    \"👦\",\n    \"👧\",\n    \"👨\",\n    \"👩\",\n    \"👴\",\n    \"👵\",\n    \"👱\",\n    \"👼\",\n    \"👸\",\n    \"😺\",\n    \"😸\",\n    \"😻\",\n    \"😽\",\n    \"😼\",\n    \"🙀\",\n    \"😿\",\n    \"😹\",\n    \"😾\",\n  ];\n\n  return emojis[Math.floor(Math.random() * emojis.length)];\n}\n","export default __webpack_public_path__ + \"static/media/peep.d69a034c.png\";","/* eslint-disable */\nimport React, { useState } from \"react\";\nimport parse from \"html-react-parser\";\nimport InputNumber from \"rc-input-number\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUsers } from \"@fortawesome/free-solid-svg-icons\";\n\nimport * as brain from \"./brain\";\n\nimport \"./App.css\";\nimport \"./cards/cards.css\";\nimport \"./custom.css\";\nimport peep from \"./images/peep.png\";\n\nfunction App() {\n  const [numberOfPlayers, setNumberOfPlayers] = useState(2);\n  const [distributed, setDistributed] = useState(false);\n  const playerCards = brain.distribute(numberOfPlayers);\n  const display = distributed ? \"block\" : \"none\";\n  const headertop = distributed ? \"top\" : \"middle\";\n\n  return (\n    <div className=\"App\">\n      <header className={`App-header ` + headertop}>\n        <div className=\"widget\">\n          <h5>Hey, I'm your croupier today</h5>\n\n          <FontAwesomeIcon icon={faUsers} />\n          <h4> Please enter the number of player</h4>\n\n          <InputNumber\n            min={1}\n            max={52}\n            defaultValue={numberOfPlayers}\n            onChange={(value) => {\n              setDistributed(true);\n              setNumberOfPlayers(value);\n            }}\n            onPressEnter={(value) => {\n              setDistributed(true);\n              setNumberOfPlayers(numberOfPlayers);\n            }}\n          />\n        </div>\n      </header>\n\n      <div style={{ display: display }} className=\"card-wrap\">\n        <div className=\"playingCards\">\n          {playerCards.error && (\n            <div className=\"err-wrap\">\n              {\" \"}\n              <img src={peep} alt=\"peep\" />\n              <div className=\"err-msg\">{playerCards.msg} </div>\n            </div>\n          )}\n\n          {!playerCards.error &&\n            playerCards.map((items, index) => {\n              return (\n                <div className=\"card-player\">\n                  <h4>\n                    {\" \"}\n                    Player {index + 1} {parse(brain.avatar())}\n                  </h4>\n\n                  <ul className=\"hand\">\n                    {items.map((subItems, sIndex) => {\n                      return (\n                        <li>\n                          <a\n                            href=\"#\"\n                            className={`card rank-${subItems.ranks} ${subItems.suit}`}\n                          >\n                            <span className=\"rank\">\n                              {subItems.ranks.toUpperCase()}\n                            </span>\n                            <span className=\"suit\">\n                              {parse(subItems.suitCode)}\n                            </span>\n                          </a>\n                        </li>\n                      );\n                    })}\n                  </ul>\n                </div>\n              );\n            })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}